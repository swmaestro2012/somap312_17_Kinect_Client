<?xml version="1.0"?>
<doc>
    <assembly>
        "VideoInputSharp"
    </assembly>
    <members>
        <member name="M:VideoInputSharp.VideoInput.get_DevicesFound">
            <summary>
Number of devices available
</summary>
        </member>
        <member name="M:VideoInputSharp.VideoInput.RestartDevice(System.Int32)">
            <summary>
Completely stops and frees a device but then sets it up with same settings
</summary>
            <param name="deviceID" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.StopDevice(System.Int32)">
            <summary>
Completely stops and frees a device
</summary>
            <param name="deviceID" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetSize(System.Int32)">
            <summary>
Get number of pixels
</summary>
            <param name="deviceID" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetHeight(System.Int32)">
            <summary>
Get height
</summary>
            <param name="deviceID" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetWidth(System.Int32)">
            <summary>
Get width
</summary>
            <param name="deviceID" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetVideoSettingCamera(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="min" />
            <param name="max" />
            <param name="SteppingDelta" />
            <param name="currentValue" />
            <param name="flags" />
            <param name="defaultValue" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingCameraPct(System.Int32,System.Int32,System.Single,System.Int32)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="pctValue" />
            <param name="Flags" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingCameraPct(System.Int32,System.Int32,System.Single)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="pctValue" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingCamera(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="lValue" />
            <param name="Flags" />
            <param name="useDefaultValue" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingCamera(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="lValue" />
            <param name="Flags" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingCamera(System.Int32,System.Int32,System.Int32)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="lValue" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetVideoSettingFilter(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="min" />
            <param name="max" />
            <param name="SteppingDelta" />
            <param name="currentValue" />
            <param name="flags" />
            <param name="defaultValue" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingFilterPct(System.Int32,System.Int32,System.Single,System.Int32)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="pctValue" />
            <param name="Flags" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingFilterPct(System.Int32,System.Int32,System.Single)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="pctValue" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="lValue" />
            <param name="Flags" />
            <param name="useDefaultValue" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingFilter(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="lValue" />
            <param name="Flags" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVideoSettingFilter(System.Int32,System.Int32,System.Int32)">
            <summary />
            <param name="deviceID" />
            <param name="Property" />
            <param name="lValue" />
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.ShowSettingsWindow(System.Int32)">
            <summary>
Launches a pop up settings window.
For some reason in GLUT you have to call it twice each time.
</summary>
            <param name="deviceID" />
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32,System.Byte[],System.Boolean,System.Boolean)">
            <summary>
Get the pixels. Pass in a buffer for getPixels to fill returns true if successful.
</summary>
            <param name="id" />
            <param name="pixels">pixel data</param>
            <param name="flipRedAndBlue">toggles RGB/BGR flipping</param>
            <param name="flipImage">If true, you can flip the image</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32,System.Byte[],System.Boolean)">
            <summary>
Get the pixels. Pass in a buffer for getPixels to fill returns true if successful.
</summary>
            <param name="id" />
            <param name="pixels">pixel data</param>
            <param name="flipRedAndBlue">toggles RGB/BGR flipping</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32,System.Byte[])">
            <summary>
Get the pixels. Pass in a buffer for getPixels to fill returns true if successful.
</summary>
            <param name="id" />
            <param name="pixels">pixel data</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32,System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
Get the pixels. Pass in a buffer for getPixels to fill returns true if successful.
</summary>
            <param name="id" />
            <param name="pixels">pixel data</param>
            <param name="flipRedAndBlue">toggles RGB/BGR flipping</param>
            <param name="flipImage">If true, you can flip the image</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32,System.IntPtr,System.Boolean)">
            <summary>
Get the pixels. Pass in a buffer for getPixels to fill returns true if successful.
</summary>
            <param name="id" />
            <param name="pixels">pixel data</param>
            <param name="flipRedAndBlue">toggles RGB/BGR flipping</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32,System.IntPtr)">
            <summary>
Get the pixels. Pass in a buffer for getPixels to fill returns true if successful.
</summary>
            <param name="id" />
            <param name="pixels">pixel data</param>
            <returns>true if successful</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32,System.Boolean,System.Boolean)">
            <summary>
Returns the pixels
</summary>
            <param name="deviceID" />
            <param name="flipRedAndBlue">toggles RGB/BGR flipping</param>
            <param name="flipImage">If true, you can flip the image</param>
            <returns>pixel data</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32,System.Boolean)">
            <summary>
Returns the pixels
</summary>
            <param name="deviceID" />
            <param name="flipRedAndBlue">toggles RGB/BGR flipping</param>
            <returns>pixel data</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetPixels(System.Int32)">
            <summary>
Returns the pixels
</summary>
            <param name="deviceID" />
            <returns>pixel data</returns>
        </member>
        <member name="M:VideoInputSharp.VideoInput.IsDeviceSetup(System.Int32)">
            <summary />
            <param name="deviceID" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.IsFrameNew(System.Int32)">
            <summary>
Tells you when a new frame has arrived - you should call this if you have specified setAutoReconnectOnFreeze to true
</summary>
            <param name="deviceID" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetFormat(System.Int32,VideoInputSharp.VideoInputFormat)">
            <summary>
If you need to you can set your NTSC/PAL/SECAM
preference here. if it is available it will be used.
see #defines above for available formats - eg VI_NTSC_M or VI_PAL_B
should be called after setupDevice
can be called multiple times 
</summary>
            <param name="deviceNumber" />
            <param name="format" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetupDevice(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
These two are only for capture cards.
USB and Firewire cameras souldn't specify connection 
</summary>
            <param name="deviceID" />
            <param name="w" />
            <param name="h" />
            <param name="connection" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetupDevice(System.Int32,System.Int32)">
            <summary>
These two are only for capture cards.
USB and Firewire cameras souldn't specify connection 
</summary>
            <param name="deviceID" />
            <param name="connection" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetupDevice(System.Int32,System.Int32,System.Int32)">
            <summary>
Choose one of these four to setup your device
</summary>
            <param name="deviceID" />
            <param name="w" />
            <param name="h" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetupDevice(System.Int32)">
            <summary>
Choose one of these four to setup your device
</summary>
            <param name="deviceID" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetAutoReconnectOnFreeze(System.Int32,System.Boolean,System.Int32)">
            <summary>
Some devices will stop delivering frames after a while - this method gives you the option to try and reconnect
to a device if videoInput detects that a device has stopped delivering frames. 
You MUST CALL isFrameNew every app loop for this to have any effect
</summary>
            <param name="deviceNumber" />
            <param name="doReconnect" />
            <param name="numMissedFramesBeforeReconnect" />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetIdealFramerate(System.Int32,System.Int32)">
            <summary>
Call before setupDevice.
DirectShow will try and get the closest possible framerate to what is requested.
</summary>
            <param name="deviceID" />
            <param name="idealFramerate" />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetUseCallback(System.Boolean)">
            <summary>
Choose to use callback based capture - or single threaded
</summary>
            <param name="useCallback" />
        </member>
        <member name="M:VideoInputSharp.VideoInput.GetDeviceName(System.Int32)">
            <summary>
Needs to be called after listDevices - otherwise returns null
</summary>
            <param name="deviceID" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.ListDevices(System.Boolean)">
            <summary>
Functions in rough order they should be used.
</summary>
            <param name="silent" />
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.ListDevices">
            <summary>
Functions in rough order they should be used.
</summary>
            <returns />
        </member>
        <member name="M:VideoInputSharp.VideoInput.SetVerbose(System.Boolean)">
            <summary>
Turns off console messages - default is to prInt32 messages
</summary>
        </member>
        <member name="M:VideoInputSharp.VideoInput.Dispose">
            <summary>
Finalizer 
</summary>
        </member>
        <member name="M:VideoInputSharp.VideoInput.Finalize">
            <summary>
Destructor
</summary>
        </member>
        <member name="M:VideoInputSharp.VideoInput.#ctor">
            <summary>
Constructor
</summary>
        </member>
        <member name="P:VideoInputSharp.VideoInput.DevicesFound">
            <summary>
Number of devices available
</summary>
        </member>
        <member name="T:VideoInputSharp.VideoInput">
            <summary>
VIDEO INPUT
</summary>
        </member>
        <member name="T:VideoInputSharp.VideoInputFormat">
            <summary>
Camera resolution
</summary>
        </member>
    </members>
</doc>